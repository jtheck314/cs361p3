# Project 3: Regular Expressions

* Author: Justin Heck, David Marcial
* Class: CS361 Section 3
* Semester: Spring 2021

## Overview

Given a Regular Expression(RegEx) we had to construct a NFA for the RegEx. There was a helpful tip
that we should use recursive descent parsing algorithm. 


## Compiling and Using

To compile, execute the following command in the main project directory(Where you can see the fa and dfa):
----------------------------------------------
$ javac -cp ".:./CS361FA.jar" re/REDriver.java
----------------------------------------------

Run the compiled class with the command:
----------------------------------------------------------
$java -cp ".:./CS361FA.jar" re.REDriver ./tests/p3tc1.txt
----------------------------------------------------------


## Discussion
The Parsing regular expressions with recursive descent was extremely helpful for this project. I(David) had
to read it twice in order for me to understand how and why they structured things they way they did, Justin 
on the other hand seem to wrap his head around the article after reading it just once. We would have to say 
that most difficult part of the project was getting the nfaUnion method to work the way we wanted it to. Once
that method was written up the rest of the project was not as difficult. 

## Testing

For testing we were provided a test folder which is located under ( ./tests).


## Extra Credit

No extra credit opportunites were avaiable for this project. 

## Sources used

[Parsing regular expresions with recursive descent] (http://matt.might.net/articles/parsing-regex-with-recursive-descent/)